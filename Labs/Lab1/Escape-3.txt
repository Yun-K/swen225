class GameFixture
{
 
  fixtureDescription;
  
  public String getFullFixtureDescription(){
    String detail = getFixtureDescription();
    detail += "\n" + getExtraFixtureDescription();
    return detail;
  
  }
  
  String getExtraFixtureDescription() {
    return "";
  
  }
}

class Room
{ 
* -> * GameFixture fixtures;
  
  public String getRoomDescription(){
    String descri="I'm in a room. I see:\n";
     
    for(GameFixture fixture : fixtures){
      descri +=fixture.getFullFixtureDescription() + "\n";
    
    }
     return descri;
  }
  
  
public void playScenario(){
  TreasureChest fixture = new TreasureChest("A large and heavy treasure chest.");
  addFixture(fixture);
  
  Wardrobe wardrobe = new Wardrobe("A Wardrobe");
  addFixture(wardrobe);
  
  System.out.println(getRoomDescription());
  
  wardrobe.setLocked(false);
  fixture.setOpen(true);
  
  System.out.println(getRoomDescription());

}
  public static void main(String... args) { 
  new Room().playScenario();
}
  
}
class TreasureChest
{
  Boolean open = false;
  isA GameFixture;
  
   public String getExtraFixtureDescription() {
     
     if(open){
       return "It contains the room key!";
     }
     return "It's lid is closed.";
     
   }
}

class Wardrobe
{
  isA GameFixture;
  Boolean locked = true;
  
  String getExtraFixtureDescription(){
    return "It's " + doorDescription();
    
  
  }
  
  private String doorDescription(){
    
    if(locked){
      return "locked";
    }
    return "unlocked";
  }
}//$?[End_of_model]$?

namespace -;


class GameFixture
{
  position 175 198 281 111;
}

class Room
{
  position 423 46 237 110;
  position.association GameFixture:fixtures__Room 0,12 193,15;
}

class TreasureChest
{
  position 380 398 281 94;
}

class Wardrobe
{
  position 0 397 281 111;
}